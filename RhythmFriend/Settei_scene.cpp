//======================================================================================//
//
//							ゲームプログラム
//
//======================================================================================//
#include		<windows.h>
#include		<stdio.h>
#include		<math.h>
#include		"MASTER/Ci-Lib.H"
#include		"Game.H"

//****************************************************************************
//	■	定義
//
//****************************************************************************

GsTEXTURE	YUBI_Se;
GsTEXTURE	YOMIKOMI_Se;
GsSOUND    Se_BGM;

//****************************************************************************
//	■	内部使用　変数
//
//****************************************************************************

typedef struct{
	short  Fps;
	short  MiniFps;
	bool   Start;
	bool   Flg;
	bool  alp_Flg[320];//テキスト切り替え時エフェクト
	short alp[320];
	short  Cnt;//切り替えエフェクト時のカウント
}CONTROLSe;

CONTROLSe    ControlSe;

//--------------------------------------------------------------------------//
//	●	初期化		：シーンに移る時一回、変数の初期化
//
//--------------------------------------------------------------------------//
void	SetteiInit(void)
{
	Gs_PlayBGM(Se_BGM);
	for(short i=0;i<320;i++){
		ControlSe.alp_Flg[i] = false;
		ControlSe.alp[i] = 255;
	}
	ControlSe.Fps = 0;
}

//--------------------------------------------------------------------------//
//	●	内部処理	：シーン中の処理、現在のシーンで行う処理
//
//--------------------------------------------------------------------------//
// ゲームメインループ
void	SetteiLoop(void)
{
	ControlSe.Fps += 8;
	for(short i=0;i<320;i++){
		if(ControlSe.Fps >= 320 - i){
			ControlSe.alp_Flg[i] = true;
		}
		if(ControlSe.alp_Flg[i]){
			ControlSe.alp[i] -= 10;
		}
		LIMIT(ControlSe.alp[i],0,255);
	}

	if(MsAREA(0,0,200,50)){
		if(Mouse.Trg & _lMOUSE){
			SceneChange(TITLE_SCENE);
		}
	}
}              
//--------------------------------------------------------------------------//
//	●	描画		：シーン中の描画、現在のシーンで表示するBMPはここで
//
//--------------------------------------------------------------------------//
// ゲーム画面　描画
void	SetteiDraw(void){
	Gs_DrawBox(0,0,WINW,WINH,ARGB(255,255,255,204),true);//背景
	Gs_DrawBox(0,0,WINW,WINH,ARGB(200,192,192,192),true);//背景

	for(short i=0;i<320;i++){
		Gs_DrawBox(i,0,i+1,WINH,ARGB(ControlSe.alp[i],240,240,240),true);//緑
		Gs_DrawBox(639-i,0,639-i+1,WINH,ARGB(ControlSe.alp[i],240,240,240),true);//緑
	}

	if(Mouse.Px >= 20 && Mouse.Px <= 620 && Mouse.Py >= 20 && Mouse.Py <= 940){
		Gs_DrawLayer(Mouse.Px,Mouse.Py+32,YUBI_Se,0,0,256,256,false,ARGB(255,255,255,255),true,0,0.25f,0.25f);//指
	}
}
//--------------------------------------------------------------------------//
//	●	ロード		：シーンに入る時、そのシーンで必要なデータの読み込み
//
//--------------------------------------------------------------------------//
short	SetteiLoad(void)
{
	YUBI_Se  = Gs_LoadBMP("DATA/BMP/yubi.PNG");
	YOMIKOMI_Se  = Gs_LoadBMP("DATA/BMP/yomikomi.PNG");
	Se_BGM      = Gs_LoadWAVE("DATA/SOUND/SETTEIBGM.wav",true);
	return		SETTEI_SCENE;
}

//--------------------------------------------------------------------------//
//	●	後処理		：現在のシーンから抜ける時、データの破棄
//
//--------------------------------------------------------------------------//
void	SetteiExit(void)
{
	Gs_ReleaseBMP(YUBI_Se);
	Gs_ReleaseBMP(YOMIKOMI_Se);
	Gs_ReleaseSOUND(Se_BGM);
}

//****************************************************************************
//	★　シーンテーブル：各シーンで呼び出される関数の登録
//****************************************************************************

SCENE_TBL	SetteiSceneTbl = {
		SetteiLoad,
		SetteiInit,
		SetteiLoop,
		SetteiDraw,
		SetteiExit
};

//======================================================================================//
//							EOP															//
//============================================================